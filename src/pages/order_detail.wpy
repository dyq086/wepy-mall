<!--订单详情-->
<template>
  <view class="order_detail">
  <navigator class="item_content" url="/pages/logistics?orderNo={{orderNo}}">
    <view class="order_state" wx:if="{{obj.status==2 || obj.status==1}}">
      <view class="left">
        <i class="iconfont icon-complete"></i>
      </view>

      <view class="center">
        <view class="state_doc">{{expressFlowInfo.flowName}}</view>
        <view class="state_time">{{expressFlowInfo.updateTime}}</view>
      </view>

      <view class="right">
        <view>&gt;</view>
      </view>

    </view>
  </navigator>
    <view class="order_state" wx:if="{{obj.status==0}}">
      <view class="left">
        <view class="unpaid">
          <i class="iconfont icon-wait"></i>
          <text class="unpaid_doc">等待付款</text>
        </view>
      </view>
      <view class="right">
        <text class="time_doc">剩余时间:</text>
        <text class="time_num">59:30:30</text>
      </view>
    </view>
    <view class="address_block">
      <view class="name">
        <text class="title"> 收货人:</text>
        <text class="content">{{obj.billing.first_name}}\t\t{{obj.billing.phone}}</text>
      </view>
      <view class="address">
        <text class="title"> 收货地址:</text>
        <text class="content">{{obj.billing.city}} {{obj.billing.address_1}} </text>
      </view>
    </view>
    <view class="goods_block">
      <shopItemList :goodsList.sync="list"></shopItemList>
    </view>
    <view class="info_block">
      <view class="item">
        <text class="title">订单编号:</text>
        <text class="content">{{obj.order_number}}</text>
      </view>
      <view class="item">
        <text class="title">提交时间:</text>
        <text class="content">{{obj.date_created}}</text>
      </view>
      <view class="item">
        <text class="title">支付方式:</text>
        <text class="content">微信支付</text>
      </view>
      <view class="item" wx:if="{{obj.date_paid}}">
        <text class="title">付款时间:</text>
        <text class="content">{{obj.date_paid}}</text>
      </view>
    </view>
    <view class="footer">
      <view class="money">应付款:
        <text class="receive_money">{{obj.total}}</text>
      </view>
      <view class="btn_group">

        <view class="btn" @tap="goLogistics" wx:if="{{obj.status==2}}" data-id="{{obj.orderNo}}">查看物流</view>
        <view class="btn type_pick dsh" @tap="completion" wx:if="{{obj.status==2}}" data-id="{{obj.orderNo}}">待收货</view>
        <view class="btn type_pick dsh" @tap="payMoney" wx:if="{{obj.status==0}}" data-id="{{obj.orderNo}}" data-orderno="{{obj.payOrderNo}}">立即付款</view>
<!--<view class="btn" @tap="delOrder" wx:if="{{obj.status==0 || obj.status==4}}" data-id="{{obj.orderNo}}">删除订单</view>-->
        <!--<view class="btn type_pick dsh" @tap="refund" wx:if="{{obj.status==4}}" data-id="{{obj.orderNo}}">申请退货</view>-->
      </view>
    </view>
  </view>
</template>
<script>
import wepy from 'wepy';
import tip from '@/utils/tip'
import ShopItemList from '@/components/shop_item_list'
import api from '@/api/api'
import {
  SYSTEM_INFO,
  USER_SPECICAL_INFO
} from '@/utils/constant';
export default class OrderDetail extends wepy.page {
  config = {
    navigationBarTitleText: '订单详情',
  }
  data = {
    obj: {},
    orderNo:"",
    flag:"",
    list:[],
    orderExpress:{},
    expressFlowInfo:{}
  }

  async getOrderInfo(currentPage,size) {
    let that = this;
    const json = await api.getOrders(this.orderNo)
    if (json.statusCode == 200) {
      this.obj=json.data;
      that.list= json.data.line_items;
      // that.list = [...that.list, ...json.data.obj.orderItemList];
      that.$invoke('shopItemList', 'refreshList', that.list);

      console.log("========list返回数据========");
      console.log(that.list);
      // console.log(json.data.obj.orderItemList);
    } else {
      tip.error(json.data.message)
    }

    that.$apply();
  }

  async editOrderInfo(orderNo,flag) {
    let that = this;
    let userSpecialInfo = wepy.getStorageSync(USER_SPECICAL_INFO) || {};
    const json = await api.editOrderInfo({
      query: {
        orderNo: orderNo,
        flag:flag
      }
    });
    if (json.data.code == 0) {
      console.log("===========lzz返回数据=========")
      console.log(json.data.errerTips);
      /*that.list = [...that.list, ...json.data.errerTips.orderItemList];
      that.$invoke('shopItemList', 'refreshList', that.list);
      console.log(json.data.errerTips.orderItemList);
      console.log(that.list);*/
      if (this.flag==2) {//删除

      }
    } else {
      tip.error(json.data.msg)
    }
    that.$apply();
  }

  async getOrderExpressInfo() {
    console.log("orderNo")
    let that = this;
    let userSpecialInfo = wepy.getStorageSync(USER_SPECICAL_INFO) || {};
    const json = await api.orderExpressInfo({
      query: {
        orderNo: this.orderNo
      }
    });
    if (json.data.code == 0) {
      that.orderExpress=json.data.orderExpress;
      that.expressFlowInfo=json.data.expressFlowInfo;
      console.log("========list返回数据========");
      console.log(that.list);
    } else {
      tip.error(json.data.msg)
    }

    that.$apply();
  }

  components = {
    shopItemList: ShopItemList
  }
  onLoad(options) {
    let that = this;
    //that.list = bb.result.products;
    this.orderNo=options.orderNo;
    that.getOrderInfo();
    // that.getOrderExpressInfo();
    console.log("=========options==========");
    console.log(options.id);
  }
  computed = {

  }
  methods = {
    async delOrder(e) {
      this.flag=2;
      this.orderNo = e.currentTarget.dataset.id;
      await tip.confirm('是否删除订单');
      console.log(this.flag);
      this.editOrderInfo(this.orderNo,this.flag);
      console.log("删除成功")
    },
    async completion(e) {
      this.flag=3;
      this.orderNo = e.currentTarget.dataset.id;
      await tip.confirm('是否确认收货');
      this.editOrderInfo(this.orderNo,this.flag);
      console.log("完成")
    },
    async goLogistics() {
      tip.confirm('查看物流');
    },
    async payMoney(e) {
      let tradeNo = e.currentTarget.dataset.tradeno;
      let userSpecialInfo = wepy.getStorageSync(USER_SPECICAL_INFO) || {};
      let openId = userSpecialInfo.openid;

      const pay = await api.toPay({
        query:{
          openId: openId,
          orderNo: tradeNo
        }
      });
      if (pay.data.code==0) {
        //以下是微信支付
        wx.requestPayment({
          appId: pay.data.appId,
          timeStamp: pay.data.timeStamp,
          nonceStr: pay.data.nonceStr,
          package: pay.data.package,
          signType: 'MD5',
          paySign: pay.data.paySign,
          success: function (res) {
            console.log('pay', res)
            setTimeout(() => {
              //支付成功 关闭loadding 跳转到支付成功页面
              tip.loaded();
              wepy.navigateTo({
                url: "/pages/pay_success?orderNo="+tradeNo
              })
            }, 2000)
          },
          fail: function (res) {
            tip.alert('支付失败');
          }
        })
      } else {
        tip.alert('支付失败');
      }
    }
  }

  events = {

  }

}

</script>
<style lang="less">
.order_detail {
  position: relative;
}

.order_state {
  padding: 35rpx 24rpx;
  display: flex;
  justify-content: space-between;
  align-items: center;
  margin-top: 10rpx;
  background: #fff;
  .iconfont {
    font-size: 40rpx;
    color: #6a6a6a;
  }
  .state_time {
    padding-top: 24rpx;
  }
  .center {
    flex: 1;
    margin-left: 50rpx;
  }
  .right {
    display: flex;
    align-items: center;
  }
  .unpaid {
    margin-left: 50rpx;
    .unpaid_doc {
      margin-left: 10rpx;
    }
  }
  .time_doc {
    font-size: 26rpx;
    color: #999;
  }
  .time_num {
    font-size: 26rpx;
    margin-right: 50rpx;
  }
}

.address_block {
  padding: 30rpx;
  background: #fff;
  margin-top: 10rpx;
  .address {
    padding-top: 20rpx;
  }
  .title {
    color: #858585;
  }
  .content {
    color: #000;
    padding-left: 24rpx;
  }
}

.goods_block {
  margin-top: 10rpx;
  background: #fff;
}

.info_block {
  margin-top: 10rpx;
  padding: 18rpx;
  background: #fff;
  .item {
    padding-top: 40rpx;
    .title {
      font-size: 28rpx;
    }
    .content {
      color: #808080;
      font-size: 28rpx;
    }
  }
}

.footer {
  position: fixed;
  bottom: 0rpx;
  height: 92rpx;
  background: #fff;
  width: 100%;
  display: flex;
  justify-content: space-between;
  align-items: center;
  padding: 18rpx;
  border-top: 1px solid #e6e6e6;
  .btn_group {
    display: flex;
    margin-right: 30rpx;
    .btn {
      padding: 20rpx 20rpx;
      border: 1px solid #cccccc;
      text-align: center;
      margin: 0 auto;
      width: 180rpx;
      -moz-border-radius: 10rpx;
      /* Firefox */
      -webkit-border-radius: 10rpx;
      /* Safari 和 Chrome */
      border-radius: 10rpx;
    }
    .dsh {
      margin-left: 20rpx;
    }
  }
  .receive_money {
    color: #ff4856;
  }
}

</style>

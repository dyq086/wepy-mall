<template>
  <view class="container">
    <search @searchValue.user="doSearch"></search>
    <filterBar wx:if="{{list.length>0||skuval !==''}}" @currentType.user="currentType"></filterBar>
    <view wx:if="{{list.length>0}}">
      <!--矩阵商品列表模块-->
      <shopGridList :purchasetype.sync="purchasetype" :list.sync="list"></shopGridList>
      <!--加载更多时动画-->
      <bottomLoadMore :show.sync="showLoading" message="正在加载"></bottomLoadMore>
      <!--暂无数据显示-->
      <placeholder :show.sync="is_empty" message="暂无发现数据"></placeholder>

    </view>
    <view class="history {{show?'':'hidden'}}" wx:else>
      <view class="doc">历史记录</view>
      <view class="lable">
        <view wx:for="{{keywordhisList}}" wx:key="item" @tap.stop="selHisKeyWord" data-id="{{index}}">
          <view class="child {{item.sel=='1' ?'active':''}}">{{item.keyword}}</view>
        </view>
      </view>
      <view class="btn_box">
        <view class="button type_empity" @tap.stop="clearHis">清除历史记录</view>
      </view>
    </view>
  </view>
</template>

<script>
  import wepy from 'wepy';
  import api from '@/api/api';
  import tip from '@/utils/tip'
  import {
    SYSTEM_INFO,
    USER_SPECICAL_INFO,
    SEARCH_LIST
  } from '@/utils/constant';
  import Searchs from '@/components/search'
  import FilterBar from "../components/filter_bar"
  import ShopGridList from '@/components/shop_grid_list'
  import BottomLoadMore from "../components/common/bottomLoadMore"
  import Placeholder from "../components/common/placeholder"
  import FilterSlider from '@/components/filterSlider'
  export default class Search extends wepy.page {
    config = {
      navigationBarTitleText: '搜索',
    }
    components = {
      search: Searchs,
      filterBar: FilterBar,
      filterSlider: FilterSlider,
      shopGridList: ShopGridList,
      bottomLoadMore: BottomLoadMore,
      placeholder: Placeholder
    }
    data = {
      list: [],
      showLoading: false,
      purchasetype: 1,
      is_empty: false,
      is_filter:false,
      //当前页面
      currentPage: 1,
      //总页数
      page_total: 0,
      keyword: "",
      keywordhisList: [],
      cateCode: "",
      show: true,
      orderby: null,
      order: 'desc',
      title: "",
      skuval: ""
    }
    async getKeyWordHisList() {
      // const json = await api.searchKeywordList()
      // if (json.statusCode == 200) {
      //   this.keywordhisList = json.data.list;
      // }
      this.keywordhisList = wepy.getStorageSync(SEARCH_LIST);
      console.log(this.keywordhisList);
      this.$apply();
    }
    setTitle(title) {
      wepy.setNavigationBarTitle({
        title: title
      })
    }
    onLoad(option) {
      this.list = [];
      this.skuval = "";
      this.cateCode = option.cateCode;
      if (this.cateCode != undefined && this.cateCode.length > 0) { //分类进入
        this.$invoke('search', 'show', "0");
        this.show = false;
        this.doSearchGoods(this.cateCode);
        this.title = "" + option.title;
        this.setTitle("" + option.title);
      } else { //搜索进入
        this.$invoke('search', 'show', "1");
        this.show = true;
        // TODO:函数内部改为从storage中读取

        this.getKeyWordHisList();

      }
    }
    computed = {}
    async doSearchGoods(keyword, currentPage, size) {
      let that = this;
      let query = {
          page: currentPage || 1,
          size: size || 10,
          search: this.keyword,
          category: that.cateCode || "",
          order: this.order,
        }
      // console.log('orderby', this.orderby)
      switch (this.orderby) {
        case 'total_sales':
          query.orderby = 'meta_value_num';
          query.meta_key = this.orderby
          break;
        case '_price':
          query.orderby = 'meta_value_num';
          query.meta_key = this.orderby
          break;

      }
      const json = await api.queryProducts({
        query
      });
      if (json.statusCode == 200) {
        that.list = [...that.list, ...json.data];
        that.page_total = json.header['X-WP-Total'];
        if (that.page_total == 0 && that.list.length == 0) {
          //暂无数据
          that.is_empty = true;
        }
      } else {
        tip.error(json.data.message);
      }
      that.showLoading = false;
      that.$apply();
      if (keyword.length > 0) {
        // TODO:改为写入Storage
        /*
        const resultJson = await api.addSearchKeyword({
          query: {
            keyword: keyword
          }
        });*/
      }
    }
    async clearUserKeywords() {
      // let userSpecialInfo = wepy.getStorageSync(USER_SPECICAL_INFO) || {};
      // let openId = userSpecialInfo.openid;
      // const json = await api.clearSearchKeyword({
      //   query: {
      //     openId: openId
      //   }
      // });
      // if (json.data.code == 0) {
      //   this.keywordhisList = [];
      // } else {
      //   tip.error(json.data.msg);
      // }
      this.keywordhisList = [];
      wepy.setStorageSync(SEARCH_LIST,this.keywordhisList);
      this.$apply();
    }
    methods = {
      doSearch(val) {
        this.list = [];
        this.is_empty = false;
        //tip.success("搜索：" + val);
        this.showLoading = true;
        this.keyword = val;
        this.doSearchGoods(val);
        //this.list = bb.result.products;
        //this.$apply();
      },
      currentType(obj) {
        //tip.success("状态:" + obj);
        var name = obj.name;
        var type = obj.type;
        // console.log('obj', obj);
        if (name == "zonghe") {
          this.orderby = '';
          this.order = 'desc';
        } else if (name == "sale") {
          this.orderby = 'total_sales';
          this.order = 'desc'
        } else if (name == "price") {
          this.orderby = '_price';
          this.order = type
        } else if (name == "sku") {
          this.skuval = type;
        }
        this.list = [];
        this.is_empty = false;
        this.showLoading = true;
        //this.$invoke('search', 'show', "0");
        this.show = false;
        this.doSearchGoods(this.keyword);
      },
      selHisKeyWord(e) {
        console.log(e);
        var id = e.currentTarget.dataset.id;
        var hisKeyword = "";
        for (var i = 0; i < this.keywordhisList.length; i++) {
          this.keywordhisList[i].sel = 0;
          if (id == i) {
            hisKeyword = this.keywordhisList[i].keyword;
            this.keywordhisList[i].sel = 1;
          }
        }
        if (hisKeyword.length > 0) {
          this.keyword = hisKeyword;
          this.doSearchGoods(hisKeyword);
        }
      },
      clearHis() {
        this.clearUserKeywords();
      },
      onShareAppMessage: function(res) {
        if (res.from === 'button') {
          // 来自页面内转发按钮
          console.log(res.target)
        }
        return {
          title: this.detail.name,
          path: '/pages/search?cateCode=' + this.cateCode + '&title=' + this.title,
          success: function(res) {
            // 转发成功
          },
          fail: function(res) {
            // 转发失败
          }
        }
      }
    }
    //加载更多
    onReachBottom() {
      let that = this;
      that.showLoading = true;
      console.log(that.page_total + "===" + that.currentPage);
      //判断总页数是否大于翻页数
      if ((that.page_total) > that.currentPage) {
        //防止重复加载
        if (that.preventRepeatReuqest) {
          return true;
        }
        that.preventRepeatReuqest = true;
        that.currentPage++;
        that.doSearchGoods("", that.currentPage);
        that.preventRepeatReuqest = false;
      } else {
        that.showLoading = false;
      }
    };
  }
</script>

<style lang="less">
  .history {
    padding: 20px 27px;
  }
  .doc {
    color: #999;
    font-size: 26rpx;
  }
  .lable {
    margin-top: 20rpx;
    display: flex;
    flex-wrap: wrap;
    align-items: center;
    margin-left: -20rpx;
    .child {
      background: #dedede;
      padding: 10rpx 20rpx;
      border-radius: 300rpx;
      margin-left: 20rpx;
      font-size: 26rpx;
      margin-top: 5rpx;
      color: #000;
    }
  }
  .btn_box {
    width: 377rpx;
    margin: 0 auto;
    padding-top: 88rpx;
    .button {
      color: #999;
    }
  }
  .active {
    border: 1px solid #f23737;
    color: #f23737;
  }
</style>

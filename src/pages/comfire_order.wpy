<!--确认订单-->
<template>
  <view class="comfire_order">
<view class="goodsList">
    <!--列表显示2个，绑定数据记得去掉，这里做调试-->
<repeat for="{{list}}" key="index" index="index" item="item">
<view class="list_box" wx:if="{{item.checked}}">
  <swipeDelete :swipeData="item" @delItem.user="handleDelItem">
      <view class="goods-info">
        <view class="img-box">
          <image src="{{item.product.images[0].shop_thumbnail}}" class="img" />
        </view>
        <view class="text-box">
          <view class="goods-title">{{item.product.name}}</view>
          <view class="goods-label">{{item.product.sku}}</view>
          <view class="goods-price">¥ {{item.product.price}}</view>
          <view class="buy-num">
            <input type="number" value="{{item.quantity}}" disabled/>
          </view>
        </view>
      </view>
  </swipeDelete>
</view>
</repeat>
</view>

    <view class="spacing"></view>
    <view class="order_info">
      <view class="block">
        <view class="left">配送方式</view>
      </view>

      <van-radio-group value="{{chosenShipping.method_id}}" @change="changeShipping('')">
        <view class="block" @tap.="changeShipping('flat_rate')">
          <view class="left">邮寄</view>
          <view class="right">
            <van-radio name="flat_rate" value="flat_rate" checked-color="#5abb6a" ></van-radio>
          </view>
        </view>
        <view class="block" @tap="changeShipping('local_pickup')">
          <view class="left">自提</view>
          <view class="right">
            <van-radio name="local_pickup" value="local_pickup" checked-color="#5abb6a"  ></van-radio>
          </view>
        </view>
      </van-radio-group>
    <view class="spacing"></view>
    <view class="address" @tap="setAddress" wx:if="{{chosenShipping.method_id != 'local_pickup'}}">
      <view class="empty_address" wx:if="{{!is_exit_address}}">
        <view class="title">设置收货地址</view>
        <view class="arrow">&gt;</view>
      </view>
      <view class="address_info" wx:else>
        <view class="title">
          <view class="user_info">
            <text class="name">{{address.userName}} </text>
            <text class="phone">{{address.telNumber}}</text>
          </view>
          <view class="active_address">
            <text class="defult" wx:if="{{address.isdefault==1}}"> [默认]</text>
            {{address.countryName}} {{address.provinceName}} {{address.cityName}} {{address.detailInfo}} {{address.postalCode}}
          </view>
        </view>
        <view class="arrow">&gt;</view>
      </view>
    </view>
    <view wx:if="{{chosenShipping.method_id == 'local_pickup'}}">
      <view class="block">
      <view class="left">自提点: {{estate.title.rendered}}</view>
      </view>
      <view class="block">
        <view class="left">站长</view>
        <view class="right">{{estate.contact}}</view>
      </view>
      <view class="block">
        <view class="left">联系电话</view>
        <view class="right">{{estate.phone}}</view>
      </view>
      <view class="block">
        <view class="left">地址</view>
        <view class="right">{{estate.address}}</view>
      </view>
      <view class="block">
        <view class="left">营业时间</view>
        <view class="right">{{estate.timerange}}</view>
      </view>
    </view>
      <view class="spacing"></view>
      <view class="block">
        <view class="left">买家留言:</view>
        <view class="right input_box">
          <input bindinput="bindKeyInput" placeholder="对本次交易的说明" />
        </view>
      </view>
      <view class="spacing"></view>
        <view class="block">
        <view class="left total_jf">积分 \t共{{total_jf_num}}\t可用{{can_use_score}}</view>
        <view class="right"><input type="number" class="dk-jf" value="{{jf_num}}" bindinput="jfInput" placeholder="输入抵扣积分"/></view>
      </view>
      <view class="spacing"></view>
      <view class="block">
        <view class="left tongji">商品金额</view>
        <view><view class="right price" wx:if="{{jf_num>0}}">商品金额:￥{{cartContentsTotal}} + 运费:￥{{chosenShipping.cost}} - 积分:￥{{reduce_fee}}</view><view class="right price">应付:￥{{cartContentsTotal + chosenShipping.cost - reduce_fee}}<text wx:if="{{chosenShipping.cost != 0}}"> (运费:￥{{chosenShipping.cost}})</text></view></view>
      </view>
    </view>
    <view class="pay_box">
      <form report-submit bindsubmit="goPay" >
        <button form-type="submit" class="button type_green">微信支付</button>
      </form>
    </view>
  </view>
</template>
<script>
import wepy from 'wepy';
import api from '@/api/api';
import tip from '@/utils/tip';
import {getStateCode} from '@/utils/util';
import {
  SYSTEM_INFO,
  USER_SPECICAL_INFO,
  ADDRESS_ID,
  CURRENT_ESTATE,
  ME,
} from '@/utils/constant';
import swipeDelete from '@/components/common/wepy-swipe-delete'
export default class ComfireOrder extends wepy.page {
  config = {
    navigationBarTitleText: '确认订单',
  }
  components = {
    swipeDelete
  }

  data = {
    list: [],
    goodsId: "",
    //卖家留言
    sellerMessage: "",

    //是否存在默认地址
    is_exit_address: false,
    address: {},
    //总价
    cartContentsTotal: 0,
    shippingTotal: 0,
    totalPrice:0,
    actualPrice : 0,
    purchaseType : 1,
    //总积分
    total_jf_num: 0,
    can_use_score:0,
    deduScore:0,
    deduFee : 0,
    //输入抵扣积分
    jf_num: 0,
    reduce_fee : 0,
    operating: false,
    shipping: [],
    chosenShipping: {},
    estate: {},
    wpnonce: "",
  }

  //获取订单详情
  async getOrderDetailInfo() {
    let that = this;
    const json = await api.getCart({
      query: {
        shipping: true
      }
    });
    if (json.statusCode == 200) {
      let data = json.data;
      if (!data.cart) {
          return 0;
      }
      this.list = Object.keys(data.cart).map((k) => data.cart[k])
      this.cartContentsTotal = data.cart_contents_total
      // this.shippingTotal = data.shipping_total;
      this.totalPrice = data.cart_total;
      this.actualPrice = data.cart_total;
      // this.is_exit_address = data.hasDefaultAddress;
      this.address = data.defaultAddress;
      this.total_jf_num = data.userScore;
      this.can_use_score = data.canUseScore;
      this.deduScore = data.deduScore;
      this.deduFee = data.deduFee;
      this.jf_num = data.canUseScore;
      this.reduce_fee = 0; // data.reduceFee;
      this.shipping = data.shipping;
      this.wpnonce = data._wpnonce;
      this.chosenShipping = data.shipping.methods.find(item => {
        return item.id == data.shipping.chosen_method
      })
    } else {
      tip.error(json.data.message)
    }

    // 加载自提点信息
    
    this.estate= wepy.getStorageSync(CURRENT_ESTATE);
    that.$apply();
  }

  async getAddressInfo(id) {
    let userSpecialInfo = wepy.getStorageSync(USER_SPECICAL_INFO) || {};
    const json = await api.receiverInfoById({
      query: {
        id: id
      }
    });
    if (json.statusCode == 200) {
      this.is_exit_address = true;
      this.address=json.data.receiverInfo;
    } else {
      tip.error(json.data.msg)
    }
  }

  onLoad(option) {
    let that = this;
    this.actualPrice = 0;
    this.totalPrice = 0;
    this.total_jf_num = 0;
    this.can_use_score = 0;
    this.deduScore = 0;
    this.deduFee = 0;
    this.jf_num = 0;
    this.reduce_fee = 0;
    this.operating = false;
    that.goodsId = option.goodsId==undefined?"":option.goodsId;
    // this.purchaseType = option.purchasetype==undefined?"1":option.purchasetype;
    /*that.list = bb.result.products;
    console.log(bb.result.products)*/
    that.getOrderDetailInfo();
    let from = option.from==undefined?"":option.from;
    if (from=="selAdd") {
      this.getAddressInfo(wepy.getStorageSync(ADDRESS_ID))
    }
  }
  computed = {

  }

  async goToPay(formId) {
    //测试调用接口用，可注释
    tip.loading("提交订单中");
    let params = {}
    if (this.chosenShipping.method_id == 'local_pickup') {
      // TODO
      params.billing_first_name = '小刘';
      params.billing_phone = '124444';
      params.billing_country = 'CN';
      params.billing_state = getStateCode('福建');
      params.billing_city = this.estate.city;
      params.billing_address_1 = this.estate.address;
    } else {
      let address = this.address;
      params.billing_first_name = address.userName;
      params.billing_phone = address.telNumber;
      params.billing_country = 'CN';
      params.billing_state = getStateCode(address.provinceName);
      params.billing_city = address.cityName;
      params.billing_address_1 = address.detailInfo;
      params.billing_postcode = address.postalCode;
    }
    const json = await api.saveByCart({
      query: {
        _wpnonce: this.wpnonce,
        terms: true,
        form_id: formId,
        shipping_method: this.chosenShipping.id,
        payment_method: 'wxapay',
        order_comments: this.sellerMessage,
        ...params
        // reduceScore: this.jf_num
      }
    });

    if (json.statusCode  == 200 && json.data.result == 'success') {
      let me = wepy.getStorageSync(ME) || {};
      //保存成功了后进行微信支付
      const pay = await api.toPay({
        query:{
          id: json.data.order.id,
          openid: me.openid,
        }
      });

      if (pay.data.success) {
        //以下是微信支付
        wx.requestPayment({
          appId: pay.data.appId,
          timeStamp: pay.data.timeStamp,
          nonceStr: pay.data.nonceStr,
          package: pay.data.package,
          signType: 'MD5',
          paySign: pay.data.paySign,
          success: function (res) {
            console.log('pay', res)
            setTimeout(() => {
              //支付成功 关闭loadding 跳转到支付成功页面
              tip.loaded();
              wepy.navigateTo({
                url: "/pages/pay_success?orderNo="+json.data.order.id
              })
            }, 2000)
          },
          fail: function (res) {
            tip.alert('支付失败');
            setTimeout(() => {
              //支付成功 关闭loadding 跳转到支付成功页面
              tip.loaded();
              wepy.navigateTo({
                url: "/pages/order"
              })
            }, 2000)
          }
        })
      } else {
        tip.alert('支付失败');
        setTimeout(() => {
          //支付成功 关闭loadding 跳转到支付成功页面
          tip.loaded();
          wepy.navigateTo({
            url: "/pages/order"
          })
        }, 2000)
      }
    } else {
      tip.error('失败:' + json.data.message)
    }

  }

  async reduceGoodNum(id, num, index) {
    let userSpecialInfo = wepy.getStorageSync(USER_SPECICAL_INFO) || {};
    let openId = userSpecialInfo.openid;
    const json = await api.cartUpdateNum({
      query: {
        openId: openId,
        id: id,
        num: num
      }
    });
    if (json.data.code == 0) {
      // 购物车数据
      this.list[index].num = num;
      this.totalPrice = this.totalPrice - this.list[index].price;
      this.actualPrice = this.totalPrice - this.reduce_fee;
      this.operating = false;
    } else {
      tip.error(json.data.msg)
    }
    this.$apply();
  }

  async addGoodNum(id, num, index) {
    let userSpecialInfo = wepy.getStorageSync(USER_SPECICAL_INFO) || {};
    let openId = userSpecialInfo.openid;
    const json = await api.cartUpdateNum({
      query: {
        openId: openId,
        id: id,
        num: num
      }
    });
    if (json.data.code == 0) {
      // 购物车数据
      this.list[index].num = num;
      this.totalPrice = parseInt(this.totalPrice) + parseInt(this.list[index].price);
      this.actualPrice = this.totalPrice - this.reduce_fee;
      this.operating = false;
    } else {
      tip.error(json.data.msg)
    }
    this.$apply();
  }

  async deleteGoods(itemData) {
    var id = itemData.id;
    let userSpecialInfo = wepy.getStorageSync(USER_SPECICAL_INFO) || {};
    let openId = userSpecialInfo.openid;
    const json = await api.cartDel({
      query: {
        openId: openId,
        cartIdList: [id],
      }
    });
    if (json.data.code == 0) {
      // 购物车数据
      let retList = [];
      for (var i = 0; i < this.list.length; i++) {
        if (this.list[i].id == id) {
          this.totalPrice -= parseInt(this.list[i].priceSubtotal);
          this.actualPrice = this.totalPrice - this.reduce_fee;
          continue;
        } else {
          retList.push(this.list[i]);
        }
      }
      this.list = retList;
    } else {
      tip.error(json.data.msg)
    }
    this.$apply();
  }

  methods = {
    handleDelItem(itemData) {
      this.deleteGoods(itemData);
    },
    bindKeyInput(e) {
      this.sellerMessage = e.detail.value;
      console.log("====" + e.detail.value);
    },
    async goPay(e) {
      var fId = e.detail.formId;
      if (this.chosenShipping.method_id !== 'local_pickup' && !this.is_exit_address) {
        await tip.confirm('你未设置收货地址，请设置地址');
        wepy.navigateTo({
          url: "/pages/address?type=order"
        })
        return false;
      }
      this.goToPay(fId);
    },
    async setAddress() {
      try {
        await wepy.authorize({scope: "scope.address"}); 
        let address = await wepy.chooseAddress();
        this.address = address;
        this.is_exit_address = true;
        console.log('address', address);
      } catch (e) {
      }
    },
    jianBtnTap(e) {
      if (this.operating) {
        return;
      }
      this.operating = true;
      var index = parseInt(e.currentTarget.dataset.index);
      var id =  e.currentTarget.dataset.id;
      var num = this.list[index].num;
      // 如果只有1件了，就不允许再减了
      if (num > 1) {
        num --;
      } else {
        return;
      }
      // 购物车数据
      //this.list[index].num = num;
      //this.totalPrice = this.totalPrice-this.list[index].price;
      //this.actualPrice = this.totalPrice - this.reduce_fee;
      //this.$apply();
      this.reduceGoodNum(id, num, index);
    },
    jiaBtnTap(e) {
      if (this.operating) {
        return;
      }
      this.operating = true;
      var index = parseInt(e.currentTarget.dataset.index);
      var num = this.list[index].num;
      var id =  e.currentTarget.dataset.id;
      // 自增
      num ++;
      // 购物车数据
      /*this.list[index].num = num;
      this.totalPrice = parseInt(this.totalPrice)+parseInt(this.list[index].price);
      this.actualPrice = this.totalPrice - this.reduce_fee;
      this.$apply();*/
      this.addGoodNum(id, num, index);
    },
    jfInput(e) {
      let num = e.detail.value * 10 / 10;
      let reg = /^[0-9]+$/;
      if (!reg.test(num)) {
        tip.error("输入类型有误");
        this.jf_num="";
        return {
          value: ""
        };;
      }
      if (this.can_use_score != num && num !=0  ) {
        this.jf_num = this.can_use_score;
      }/* else if(parseInt(this.jf_num)%this.deduScore) {
        this.jf_num = Math.floor(parseInt(this.jf_num)/this.deduScore)*this.deduScore;
      }*/ else {
        this.jf_num = num;
      }
      let beishu = this.jf_num/this.deduScore;
      this.reduce_fee = beishu * this.deduFee;
      this.actualPrice = this.totalPrice - this.reduce_fee;
      return {
        value: this.jf_num
      };
    },
    changeShipping (name, e) {
      if (!name) {
        name = e.detail;
      }
      this.chosenShipping = this.shipping.methods.find(item => {
        return item.method_id == name
      })

      console.log("shipping", e, this.chosenShipping)
      this.$apply()
    }
    
  }
  events = {

  }
}

</script>
<style lang="less">
.address {
  border-top: 1px solid #efefef;
  background: #fff;
  .empty_address,
  .address_info {
    display: flex;
    justify-content: space-between;
    height: 103rpx;
    align-items: center;
    padding: 0rpx 35rpx;
    .title {
      color: #000;
    }
    .arrow {
      color: #9a9a9a;
    }
    .user_info {
      color: #1a1a1a;
    }
    .active_address {
      margin-top: 20rpx;
    }
    .defult {
      color: #ea4a3a;
    }
  }
  .address_info {
    height: 150rpx;
  }
}

.order_info {
  .block {
    display: flex;
    justify-content: space-between;
    height: 91rpx;
    align-items: center;
    padding: 0rpx 35rpx;
    border-bottom: 1px solid #efefef;
    background: #fff;
    .txt {
      font-size: 32rpx;
    }
    .left {
      color: #000;
    }
    .right {
      color: #9a9a9a;
      text-align: right;
    }
    .price {
      color: #ea4a3a;
      font-size: 32rpx;
    }
    .tongji {
      font-size: 32rpx;
    }
    .input_box {
      flex: 1;
      margin-left: 20rpx;
    }
    .total_jf{
      font-size: 32rpx;
    }
  }
}
.list_box {
  height: 250rpx;
}

.goods-info {
  border-bottom: 1px solid #eee;
  display: flex;
  padding: 20rpx;
  box-sizing: border-box;
  position: relative;
  background: #fff;
}

.goods-info .img-box {
  width: 160rpx;
  height: 160rpx;
  overflow: hidden;
  margin-right: 28rpx;
  background-color: #d8d8d8;
}

.goods-info .text-box {
  width: 480rpx;
}

.goods-info .text-box .goods-title {
  font-size: 32rpx;
  color: #414141;
  text-overflow: ellipsis;
  white-space: nowrap;
  overflow: hidden;
  padding: 10rpx 20rpx 5rpx 0;
}

.goods-info .text-box .goods-label {
  font-size: 26rpx;
  color: #999;
  height: 38rpx;
  line-height: 38rpx;
  margin: 8rpx 0 25rpx 0;
}

.goods-info .text-box .goods-price {
  font-size: 34rpx;
  color: #e64340;
}

.goods-info .text-box .buy-num {
  width: 164rpx;
  height: 48rpx;
  line-height: 48rpx;
  position: absolute;
  right: 30rpx;
  bottom: 30rpx;
  display: flex;
  font-size: 24rpx;
  text-align: center
}

.goods-info .text-box .buy-num .jian-btn {
  width: 48rpx;
  height: 100%;
  border-left: 1rpx solid #ccc;
  border-bottom: 1rpx solid #ccc;
  border-top: 1rpx solid #ccc;
  border-bottom-left-radius: 6rpx;
  border-top-left-radius: 6rpx;
}

.goods-info .text-box .buy-num .jian-btn.disabled {
  background-color: #f5f5f9;
  border-left: 1rpx solid #eee;
  border-bottom: 1rpx solid #eee;
  border-top: 1rpx solid #eee;
  color: #ccc;
}

.goods-info .text-box .buy-num .jia-btn {
  width: 48rpx;
  height: 100%;
  border-right: 1rpx solid #ccc;
  border-bottom: 1rpx solid #ccc;
  border-top: 1rpx solid #ccc;
  border-bottom-right-radius: 6rpx;
  border-top-right-radius: 6rpx;
}

.goods-info .text-box .buy-num .jia-btn.disabled {
  background-color: #f5f5f9;
  border-right: 1rpx solid #eee;
  border-bottom: 1rpx solid #eee;
  border-top: 1rpx solid #eee;
  color: #ccc;
}

.goods-info .text-box .buy-num input {
  width: 68rpx;
  height: 48rpx;
  min-height: 48rpx;
  text-align: center;
  font-size: 24rpx;
  border: 1rpx solid #ccc;
}

.goods-info .img-box .img {
  width: 160rpx;
  height: 160rpx;
}

.pay_box {
  margin-top: 104rpx;
  padding: 0 22rpx;
}
.dk-jf {
  text-align: right;
  color: #666;
}
</style>
